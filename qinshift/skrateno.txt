pocetok na html dok
    <>Klikash shift + ! + Enter
    HTML елементи, h1-h6 (наслови), p (параграф) и трите различни видови на листи. 
 отвараме <>ol ili ul, па во него mora li
Покажавме некои inline-форматирачки елементи, self-closing елементи (br, hr) и некои семантички елементи
1. Hyperlinks (<a>таг)
   *Основна структура:
    <a href="https://www.example.com">Visit Example</a>
    *Клучни атрибути:
    href: Го специфицира URL-от или страната на која сакате да линкувате.
    target: Определува како да се отвори линкот: 
            _blank: Линкот се отвора во нов таб
            _self: Се отвора во истиот таб (стандардно)
    *Линкови за мејл:
         За да креирате линк кој отвора e-mail:
        <a href="mailto:someone@example.com">Email Us</a>
2. Images (<img>таг)
    *Основна структура:
    <img src="path/to/image.jpg" alt="Description of image" />
    *Клучни атрибути:
       - src: Ја специфицира локацијата на сликата (URL или локален пат).
       - alt: Овозможува алтернативен текст кој ја опишува сликата, важно за пристапност и за случаи кога сликата не се прикажува.
      -  width и height: Ја подесуваат големината на сликата во пиксели или проценти.
3. Комбинирање на линкови и слики
Може да го обвиткате <img> тагот со <a> таг за да ја направите сликата кликабилна:
    <a href="https://www.example.com">  <img src="path/to/image.jpg" alt="Clickable image" /></a>
4. Пристап до фајлови или ресурси што се наоѓаат во различни директориуми во проектот. Постојат два главни типа на патеки: релативнии апсолутни.
    1. Релативни патеки
       - Овие патеки се однесуваат на локацијата на тековниот фајл.
             ./ – Тековниот директориум.
            ../ – Еден директориум погоре од тековниот (односно „врати се назад“).
  Примери:
     images/picture.jpg – Фајлот picture.jpg се наоѓа во папката images, која е во истиот директориум со тековниот фајл.
    ../css/style.css – Фајлот style.css се наоѓа во папката css, една папка погоре од тековниот фајл.
    2. Апсолутни патеки
        Целосната локација на фајлот од коренот на проектот или од URL-адресата.
Пример:
    /images/picture.jpg – Почнувајќи од коренот на проектот, се наоѓа папката images каде што е picture.jpg.
    https://www.example.com/css/style.css – Линк до style датотекаta на надворешната веб-странa.
  -  Релативните патеки се најчестo за внатрешни линкови во проектите, каде што ресурсите се во истиот проект или директориум.
   - Апсолутните патеки се користат за надворешни линкови (линкови кон ресурси на Интернет или кон фајлови надвор од проектот).
   Табели:
Табелите се користат за прикажување податоци во редови и колони. Ги правиме со тагот <table> и ги структурираме на следниов начин:
•	<thead>: за поглавја.
•	<tbody>: за содржината.
•	<tfoot>: за подножјето/футерот. Користиме <tr> за редови, <th> за поглавјата во ќелиите, и <td> за податоци во ќелиите. 

Некои важни атрибути:
•	<>border: дебелина на рамката на табелата.
•	<>cellpadding: растојание внатре во ќелиите.
•	<>colspan: проширување на ќелија низ повеќе колони.
•	<>rowspan: проширување на ќелија низ повеќе редови.
Форми:
Формите се создаваат со тагот <form>, а секое поле за внес е дефинирано со <input>. Најважни атрибути:
•	action: го дефинира URL-то каде податоците ќе се испратат.
•	method: дефинира како ќе се испратат податоците (GET – податоците се прикажуваат во URL-то, POST – податоците се испраќаат скриено до серверот).
Видови на инпут полиња:
•	<input type="text"> – текст поле.
•	<input type="email"> – за валидирање на емаил.
•	<input type="password"> – скриено текст поле за лозинка.
•	<input type="radio"> – радио копчиња за избор.
•	<input type="checkbox"> – поле за селектирање повеќе опции.
•	<select> – dropdown мени, итн.
Додека елементот <label> се користи за да се објасни што треба да се внесе во полето, а може да се поврзе конкретно  со <input> полето преку id атрибутот. 

   HTML Layout
Разговаравме како HTML овозможува структурни елементи што помагаат во организација на содржината:
•	<header>: Содржи воведна или навигациска содржина во горниот дел од page-от.
•	<main>: Го претставува главниот дел, истакнувајќи ја неговата главна улога.
•	<footer>: Се наоѓа на дното и вклучува информации за авторски права, линкови и контактни информации.
•	<section> и <article>: Ги сегментираат содржините во логични делови. <section> групира поврзани содржини, додека <article> се користи за посамостојни делови (на пр. блог постови).
•	<aside>: Чува секундарни информации, често прикажани како страничен дел (sidebar). Овие елементи ја подобруваат читливоста и SEO-то преку јасна дефиниција на структурата.
Вовед во CSS
CSS, односно Cascading Style Sheets, ја контролира визуелната презентација на HTML елементите. Клучни концепти:
•	CSS правила: Се состојат од селектори, пропертиња и вредности. На пример, h1 { color: blue; } ги прави сите <h1> тагови сини (веќе направивме повеќе примери во код)
•	Наследување: Стиловите применети на парент елементите можат да се применат и на child елементите.
•	Специфичност: Помага во решавањето на конфликти преку приоритетност; ID е поспецифичен од класите, кои се пак поприоритетни од tag селекторите.
•	Important: Користењето на !important ги надминува другите правила, но треба да се користи внимателно за избегнување конфликти.
Селектори во CSS
CSS селекторите се користат за таргетирање на HTML елементи:
•	Универзален селектор (*): Применува стил на сите елементи.
•	Таг селектор (h1, p): Ги таргетира сите инстанци на даден тип.
•	Клас селектор (.className): Ги таргетира елементите со специфична класа.
•	ID селектор (#idName): Таргетира уникатен елемент по неговиот ID.
•	Child селектор (parent > child): Ги таргетира директните деца.
•	Descendant селектор ¬- parent descendant (ul li): Ги селектира сите елементи што се внатре во одреден родител.
•	Adjacent (+) и General (~) селектори
o	Adjacent sibling (+): Селектира елемент што директно следи друг.
o	General sibling (~): Ги селектира сите елементи што се после одреден елемент, без да бидат непосредни следбеници.
Бои во CSS
Веќе знаеме како се применуваат и боите:
•	Формати за бои: CSS поддржува неколку формати, како имиња (ex. “red”), hex кодови (ex. #FF5733), RGB (rgb(255, 87, 51)) и HSL (hsl(9, 100%, 60%) -hue(тон), сатурација (чистота) и светлина(lightness)).
•	RGBA и HSLA : се верзии на RGB и HSL, на кои уште им се додава четврти параметар алфа кој го контролира нивото на транспарентност (проѕирност). 
Разликата помеѓу RGBA и HSLA е во начинот на кој се дефинира бојата:
•	RGBA користи RGB (Црвена, Зелена, Сина) за да ја дефинира бојата.
Пример: rgba(255, 0, 0, 0.5) (црвена боја со полупрозирност).
•	HSLA користи HSL  за да ја дефинира бојата.
Пример: hsla(0, 100%, 50%, 0.5) (црвена боја со полупрозирност, но дефинирана со HSL).
